generator client {
  provider = "prisma-client-js"
  seed     = "ts-node ./seed.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  password String
  salt     String
  refreshToken String? @unique
  // budgets  Budget[]
  accounts Account[]
}

// model Budget {
//   id           String      @id @default(uuid())
//   userId       String
//   name         String
//   user         User        @relation(fields: [userId], references: [id])
//   categories   Category[]
//   transactions Transaction[]
// }

model Category {
  id           String        @id @default(uuid())
  userId       String
  // budgetId     String
  type         CategoryType
  name         String
  // budget       Budget        @relation(fields: [budgetId], references: [id])
  transactions Transaction[]
}

enum CategoryType {
  EXPENSE
  INCOME
}

model Account {
  id          String      @id @default(uuid())
  userId      String
  name        String
  type        AccountType
  balance     Decimal     @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

enum AccountType {
  BANK
  CREDIT_CARD
}

model Transaction {
  id          String      @id @default(uuid())
  accountId   String
  categoryId  String
  // budgetId    String
  date        DateTime    @default(now())
  inflow      Decimal?    @default(0)
  outflow     Decimal?    @default(0)
  payee       String?
  memo        String?
  cleared     Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  account     Account     @relation(fields: [accountId], references: [id])
  category    Category    @relation(fields: [categoryId], references: [id])
  // budget      Budget      @relation(fields: [budgetId], references: [id])
}
